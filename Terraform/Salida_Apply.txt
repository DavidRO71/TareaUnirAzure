Ejecuto en el cmd => terraform apply

Copio toda la salida de mi consola a continuaci√≥n:

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_container_registry.acr will be created
  + resource "azurerm_container_registry" "acr" {
      + admin_enabled                 = true
      + admin_password                = (sensitive value)
      + admin_username                = (known after apply)
      + encryption                    = (known after apply)
      + export_policy_enabled         = true
      + id                            = (known after apply)
      + location                      = "spaincentral"
      + login_server                  = (known after apply)
      + name                          = "davidacr"
      + network_rule_bypass_option    = "AzureServices"
      + network_rule_set              = (known after apply)
      + public_network_access_enabled = true
      + resource_group_name           = "davidrgn"
      + sku                           = "Basic"
      + trust_policy_enabled          = false
      + zone_redundancy_enabled       = false
    }

  # azurerm_kubernetes_cluster.aks will be created
  + resource "azurerm_kubernetes_cluster" "aks" {
      + current_kubernetes_version          = (known after apply)
      + dns_prefix                          = "myaks"
      + fqdn                                = (known after apply)
      + http_application_routing_zone_name  = (known after apply)
      + id                                  = (known after apply)
      + kube_admin_config                   = (sensitive value)
      + kube_admin_config_raw               = (sensitive value)
      + kube_config                         = (sensitive value)
      + kube_config_raw                     = (sensitive value)
      + kubernetes_version                  = (known after apply)
      + location                            = "spaincentral"
      + name                                = "miAKS"
      + node_os_upgrade_channel             = "NodeImage"
      + node_resource_group                 = (known after apply)
      + node_resource_group_id              = (known after apply)
      + oidc_issuer_url                     = (known after apply)
      + portal_fqdn                         = (known after apply)
      + private_cluster_enabled             = false
      + private_cluster_public_fqdn_enabled = false
      + private_dns_zone_id                 = (known after apply)
      + private_fqdn                        = (known after apply)
      + resource_group_name                 = "davidrgn"
      + role_based_access_control_enabled   = true
      + run_command_enabled                 = true
      + sku_tier                            = "Free"
      + support_plan                        = "KubernetesOfficial"
      + workload_identity_enabled           = false

      + auto_scaler_profile (known after apply)

      + default_node_pool {
          + kubelet_disk_type    = (known after apply)
          + max_pods             = (known after apply)
          + name                 = "default"
          + node_count           = 1
          + node_labels          = (known after apply)
          + orchestrator_version = (known after apply)
          + os_disk_size_gb      = (known after apply)
          + os_disk_type         = "Managed"
          + os_sku               = (known after apply)
          + scale_down_mode      = "Delete"
          + type                 = "VirtualMachineScaleSets"
          + ultra_ssd_enabled    = false
          + vm_size              = "Standard_B2s"
          + workload_runtime     = (known after apply)
        }

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + kubelet_identity (known after apply)

      + network_profile (known after apply)

      + windows_profile (known after apply)
    }

  # azurerm_linux_virtual_machine.avml will be created
  + resource "azurerm_linux_virtual_machine" "avml" {
      + admin_username                                         = "ubuntuadmin"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = true
      + disk_controller_type                                   = (known after apply)
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "spaincentral"
      + max_bid_price                                          = -1
      + name                                                   = "avml-ubuntu"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "davidrgn"
      + size                                                   = "Standard_B1s"
      + tags                                                   = {
          + "environment" = "dev"
        }
      + virtual_machine_id                                     = (known after apply)
      + vm_agent_platform_updates_enabled                      = false

      + admin_ssh_key {
          + public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCsVguYOG6nM6y/JzoJVS+ijwqsyWgbz5XdGo46A3jzUU86Z/stlpZpSczdORrX7ovyF/CZfV9Kw/EFN8hMotPOq7uEDMmyHOrTsP8gOCrejV5iuVeRfTe3h8A7m6N8co5A+XZjRBi6U+ohQ/SyO1vpNteJy660SSFC1MngM6mslzA9bqi0wKiZTg+YYTbLihyqene6lrM8MPBmYPl4Sp4cnGL/2a7EC/Cc+JJl+aJ87swyne6OK5mS3B/v4T875YHp1OmqM05e87SLzD2OjrXK9Moep7vGRWOQeg8qTfkvPFlPgVszOqBBCZbh5HUisDB3CNk3OYFrMXyZt4mGr0jq77FgevS6X1M/CL441uTeEaDahBZn7BfzMghACiIEOQynHWtt+xrkYWpz0/Pt5lUBTAtqT0GwY51WI81/EJW3nFmia0lrgXXSmD1pwqMe5MNIwGZnGU0grHyBKnghxAvhKOPlkDef2IKjqVuaRRJzAm+EKAYmf1GmhSLaV/JODATsI8DbLbU+qkF+4+a/ID2yy3TP/xczJO6HEyopdANymcHi8uUZKOBEpgM8giXIOzSR6GbHOqx97an/XABhdh8KYhTwy6Io6ZN99SUV768xeKGyMQLsGiY7c/cLmG1w0gUTrty37cxD/VgrYeglcx4SVxTJNhcferCcwfdPPxIKow=="
          + username   = "ubuntuadmin"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + id                        = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts"
          + version   = "latest"
        }

      + termination_notification (known after apply)
    }

  # azurerm_network_interface.anic will be created
  + resource "azurerm_network_interface" "anic" {
      + accelerated_networking_enabled = false
      + applied_dns_servers            = (known after apply)
      + id                             = (known after apply)
      + internal_domain_name_suffix    = (known after apply)
      + ip_forwarding_enabled          = false
      + location                       = "spaincentral"
      + mac_address                    = (known after apply)
      + name                           = "anic-ubuntu"
      + private_ip_address             = (known after apply)
      + private_ip_addresses           = (known after apply)
      + resource_group_name            = "davidrgn"
      + virtual_machine_id             = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "miIPConf"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_security_group.ansg will be created
  + resource "azurerm_network_security_group" "ansg" {
      + id                  = (known after apply)
      + location            = "spaincentral"
      + name                = "ansg-test"
      + resource_group_name = "davidrgn"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "AllowSSH"
              + priority                                   = 1000
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "AllowTCP"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
    }

  # azurerm_public_ip.apublic_ip will be created
  + resource "azurerm_public_ip" "apublic_ip" {
      + allocation_method       = "Static"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "spaincentral"
      + name                    = "miIPPublic"
      + resource_group_name     = "davidrgn"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
      + tags                    = {
          + "environment" = "dev"
        }
    }

  # azurerm_resource_group.arg will be created
  + resource "azurerm_resource_group" "arg" {
      + id       = (known after apply)
      + location = "spaincentral"
      + name     = "davidrgn"
    }

  # azurerm_role_assignment.acr_owner will be created
  + resource "azurerm_role_assignment" "acr_owner" {
      + condition_version                = (known after apply)
      + id                               = (known after apply)
      + name                             = (known after apply)
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = (known after apply)
      + role_definition_name             = "Owner"
      + scope                            = (known after apply)
      + skip_service_principal_aad_check = (known after apply)
    }

  # azurerm_subnet.asubnet will be created
  + resource "azurerm_subnet" "asubnet" {
      + address_prefixes                              = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "miAsubnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "davidrgn"
      + virtual_network_name                          = "miAvnet"
    }

  # azurerm_virtual_network.avnet will be created
  + resource "azurerm_virtual_network" "avnet" {
      + address_space                  = [
          + "10.0.0.0/16",
        ]
      + dns_servers                    = (known after apply)
      + guid                           = (known after apply)
      + id                             = (known after apply)
      + location                       = "spaincentral"
      + name                           = "miAvnet"
      + private_endpoint_vnet_policies = "Disabled"
      + resource_group_name            = "davidrgn"
      + subnet                         = (known after apply)
    }

Plan: 10 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  ~ public_ip = "68.221.131.19" -> (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.arg: Creating...
azurerm_container_registry.acr: Creating...
azurerm_resource_group.arg: Still creating... [10s elapsed]
azurerm_container_registry.acr: Still creating... [10s elapsed]
azurerm_resource_group.arg: Creation complete after 12s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn]
azurerm_virtual_network.avnet: Creating...
azurerm_public_ip.apublic_ip: Creating...
azurerm_network_security_group.ansg: Creating...
azurerm_kubernetes_cluster.aks: Creating...
azurerm_public_ip.apublic_ip: Creation complete after 3s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Network/publicIPAddresses/miIPPublic]
azurerm_network_security_group.ansg: Creation complete after 4s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Network/networkSecurityGroups/ansg-test]
azurerm_virtual_network.avnet: Creation complete after 5s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Network/virtualNetworks/miAvnet]
azurerm_subnet.asubnet: Creating...
azurerm_container_registry.acr: Creation complete after 17s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.ContainerRegistry/registries/davidacr]
azurerm_kubernetes_cluster.aks: Still creating... [10s elapsed]
azurerm_subnet.asubnet: Creation complete after 6s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Network/virtualNetworks/miAvnet/subnets/miAsubnet]
azurerm_network_interface.anic: Creating...
azurerm_kubernetes_cluster.aks: Still creating... [20s elapsed]
azurerm_network_interface.anic: Still creating... [10s elapsed]
azurerm_network_interface.anic: Creation complete after 13s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Network/networkInterfaces/anic-ubuntu]
azurerm_linux_virtual_machine.avml: Creating...
azurerm_kubernetes_cluster.aks: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.avml: Still creating... [10s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.avml: Still creating... [20s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [50s elapsed]
azurerm_linux_virtual_machine.avml: Still creating... [30s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [1m0s elapsed]
azurerm_linux_virtual_machine.avml: Still creating... [40s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [1m10s elapsed]
azurerm_linux_virtual_machine.avml: Creation complete after 50s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.Compute/virtualMachines/avml-ubuntu]
azurerm_kubernetes_cluster.aks: Still creating... [1m20s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [1m30s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [1m40s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [1m50s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m0s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m10s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m20s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m30s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m40s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [2m50s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [3m0s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [3m10s elapsed]
azurerm_kubernetes_cluster.aks: Still creating... [3m20s elapsed]
azurerm_kubernetes_cluster.aks: Creation complete after 3m26s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.ContainerService/managedClusters/miAKS]
azurerm_role_assignment.acr_owner: Creating...
azurerm_role_assignment.acr_owner: Still creating... [10s elapsed]
azurerm_role_assignment.acr_owner: Still creating... [20s elapsed]
azurerm_role_assignment.acr_owner: Creation complete after 26s [id=/subscriptions/d3535dc1-cdc5-4932-abad-4cf8d2ad675a/resourceGroups/davidrgn/providers/Microsoft.ContainerRegistry/registries/davidacr/providers/Microsoft.Authorization/roleAssignments/a3264779-6b9b-5999-8709-fe62150ca211]

Apply complete! Resources: 10 added, 0 changed, 0 destroyed.

Outputs:

acr_name = "davidacr"
aks_name = "miAKS"
public_ip = "68.221.196.2"

# -------------------------------------------------------------------------
# Nota: la IP va cambiando cada vez que ejecuto el comando Terraform apply
# -------------------------------------------------------------------------